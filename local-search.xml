<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Multi-Agent-System-1</title>
    <link href="/2025/01/05/Multi-Agent-System-1/"/>
    <url>/2025/01/05/Multi-Agent-System-1/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Multi-Agent-System-概述"><a href="#1-Multi-Agent-System-概述" class="headerlink" title="1 Multi-Agent System 概述"></a>1 Multi-Agent System 概述</h1><p>​一个<strong>多智能体系统</strong>（multi-agent system，缩写M.A.S.），是由一个在一个环境中交互的多个智能体组成的计算系统。多智能体系统也能被用在解决分离的智能体以及单层系统难以解决的问题。智能可以由一些方法，函数，过程，搜索算法或加强学习来实现。尽管存在相当大的重叠，然而一个多智能体系统并不总是一个基于智能体的模型（ABM）表现一致。ABM的目标是寻找遵循简单规则的智能体（这些智能体不需要体现出太强的“智慧”）集体行为的解释，通常在自然系统又或者解决具体的工程问题。ABM的术语经常在学术界被运用，而MAS的术语经常在工程技术中运用。多主体系统的研究课题可以给予一个合适的视角去观察网络贸易，灾害应对以及社会结构建模。相比于使用单一机器人或载具，多智能体则具有较高的鲁棒性以及可拓展性，这使得其对于复杂环境具有较高抗干扰能力。</p><p>​MAS的目标是让若干个具备简单智能却便于管理控制的系统能通过相互协作实现复杂智能[1]，使得在降低系统建模复杂性的同时，提高系统的鲁棒性、可靠性、灵活性。<br>多智能体系统的主要具有以下的特点：<br>  （1）自主性。在多智能体系统中，每个智能体都能管理自身的行为并做到自主的合作或者竞争。<br>  （2）容错性。智能体可以共同形成合作的系统用以完成独立或者共同的目标，如果某几个智能体出现了故障，其他智能体将自主地适应新的环境并继续工作，不会使整个系统陷入故障状态。<br>  （3）灵活性和可扩展性。MAS 系统本身采用分布式设计，智能体具有高内聚低耦合的特性，使得系统表现出极强的可扩展性。<br>  （4）协作能力。多智能体系统是分布式系统，智能体之间可以通过合适的策略相互协作完成全局目标。<br>目前多智能体系统已在飞行器的编队、传感器网络、数据融合、多机械臂协同装备、并行计算、多机器人合作控制、交通车辆控制、网络的资源分配等领域广泛应用。</p><h1 id="2-代数图论"><a href="#2-代数图论" class="headerlink" title="2 代数图论"></a>2 代数图论</h1><p>​在一致性问题的分析中图论是不可或缺的工具。对于一个多智能体系统而言，其个体间信息交换的网络拓扑结构通常用一个图来描述。下面简要介绍一下一致性问题中所要用到的图论和矩阵论的知识。</p><h2 id="2-1-图的基本概念"><a href="#2-1-图的基本概念" class="headerlink" title="2.1 图的基本概念"></a>2.1 图的基本概念</h2><p>​对于一个节点集$V&#x3D;{v_1,v_2,\dots,v_n}$和一个边集$E&#x3D;{e_1,e_2,\dots,e_n}$，如果$E$中的任意一条边$e_k$，在$V$中都有一个节点对$(v_i,v_j)$和它对应，就称由$V$和$E$构成了一个图，记为$G&#x3D;(V,E)$。<br>​ 用 $G &#x3D; (V, E)$ 来表示一个图，图中节点集 $V &#x3D; {v_1, v_2, \ldots, v_n}$ 为有限的非空集，$V$ 中有 $n$ 个元素，对每一个节点用整数 $i \in {1, 2, \ldots, n}$ 来标记，其中 $n$ 是图 $G$ 的阶。每一条边可以用一对节点 $(v_i, v_j)$ 来表示，其中 $v_i$ 是起点，$v_j$ 是终点。边集 $E \subseteq V^2$，图的边 $e_{ij} &#x3D; (v_i, v_j) \in E$ 表示节点 $j$ 可以向节点 $i$ 传递信息。在无向图中，由于节点对间的连边没有方向，因此 $(v_i, v_j) \in E \Leftrightarrow (v_j, v_i) \in E$。如果图 $G$ 中任意两个不同的节点都形成边，就称图 $G$ 是完全图。在 $n$ 阶有向图 $G$ 中，从节点 $v_i$ 出发的边的个数叫做 $v_i$ 的出度（out-degree），指向节点 $v_i$ 的边的个数叫做 $v_i$ 的入度（in-degree）。如果节点对 $(v_i, v_j) \in E$，那么 $v_j$ 就称为 $v_i$ 的一个邻接节点，节点 $v_i$ 的邻接成员用集合 $N_i &#x3D; {v_j \in V : (v_i, v_j) \in E}$ 表示。<br>​如果有向图 $G$ 存在一条从 $v_i$ 到 $v_j$ 的路径时，称 $v_i$ 是父节点，$v_j$ 是子节点。当有向图中除去唯一一个节点（根节点），其余所有的节点都有一个父节点时，称该有向图具有一个有向树。当存在一个有向树包含有向图 $G$ 中所有节点时，则称该有向图 $G$ 有一个生成树（spanning tree）。有向图 $G$ 中的强路径指的是：存在一个有序的节点序列 ${v_0, v_1, \ldots, v_r}$，其中 $(v_{i-1}, v_i) \in E$，$\forall i \in {1, 2, \ldots, r}$，$r$ 为该有向路径的长度数。此外，只要 $(v_{i-1}, v_i) \in E$ 或者 $(v_i, v_{i-1}) \in E$，有序节点序列 ${v_0, v_1, \ldots, v_r}$ 就可以称为一条弱路径。 图 2.1 根据连通程度对有向图进行了分类。如果一个有向图中任意两个有序节点之间存在一条弱路径，就称其为弱连通图；反之，如果一个有向图中任意两个有序节点之间存在一条强路径，就称其为强连通图。如果强连通有向图是对称的，就称其为连通图或对称图。如果一个有向图不是弱连通的，就称为非连通图。图1简要表示了以上概念间的关系。 </p><p><img src="/image/mas1.png"></p><div align='center'>    <font size='10'>图 1</font></div><h2 id="2-2-矩阵理论"><a href="#2-2-矩阵理论" class="headerlink" title="2.2 矩阵理论"></a>2.2 矩阵理论</h2><p>代数图论的研究与线性代数紧密联系在一起，有向图（无向图是特殊情形）中边和节点的变化可以与矩阵对应起来，因此对矩阵的分析能直接反映图的部分特性，下面简要介绍一下与本文有关的矩阵理论\cite{ref47, ref146}。 用有向图 $G$ 的邻接矩阵 $A &#x3D; [a_{ij}]$ 来描述节点与边之间的关系。其中 $A$ 定义为： $$\begin{equation} a_{ij} &#x3D; \begin{cases} 1, &amp; (v_i, v_j) \in E \ 0, &amp; \text{其他} \end{cases}  \end{equation}$$</p><p>显然，当图 $G$ 是无向图时，那么邻接矩阵 $A$ 是对称矩阵。 有向图 $G$ 的入度矩阵 $D &#x3D; [d_{ii}]$ 定义为：$d_{ii} &#x3D; \sum\limits_{j \neq i} a_{ij}$。显然，对角矩阵 $D$ 中的每个元素都等于相应节点的入度。<br>    通常，加权的邻接矩阵 $A &#x3D; [a_{ij}]$ 定义为： $\begin{equation} a_{ij} &#x3D; \begin{cases} w_{ij}, &amp; (v_i, v_j) \in E \ 0, &amp; \text{其他} \end{cases} \tag{2-2} \end{equation} $</p><p>其中，$w_{ij}$ 是边 $(v_i, v_j)$ 的权值，节点 $v_i$ 的入度是指向 $v_i$ 的所有边的权值之和。显然，（2-1）的邻接矩阵是加权邻接矩阵的一种特殊情况。 $n$ 阶有向图 $G$ 的 Laplacian 矩阵 $L &#x3D; [l_{ij}]$ 是另外一种描述节点与边之间关系的矩阵。其中 $l_{ii} &#x3D; \sum_{j \neq i} a_{ij}$，且当 $i \neq j$ 时，$l_{ij} &#x3D; -a_{ij}$。因此 $L$ 满足：$l_{ij} \leq 0, i \neq j$ 和 $\sum_{j&#x3D;1}^n l_{ij} &#x3D; 0, i &#x3D; 1, \ldots, n$。 Laplacian 矩阵与度矩阵之间的关系可以表示为：$L &#x3D; D - A$。 如果把邻接矩阵中每一行对应节点的入度都归一化，得到归一化的邻接矩阵为：$ \bar{A} &#x3D; D^{-1} A $ 如果一个节点 $v_i$ 的入度为 0，则令 $d_{ii}^{-1} &#x3D; 0$。定义归一化的拉普拉斯矩阵为：$ \bar{L} &#x3D; D^{-1} L $ 如果存在一个矩阵 $P$，使得 $PAP^T$ 是一个下三角矩阵，就称方阵 $A$ 是可约简的： $ PAP^T &#x3D; \begin{bmatrix} A_{11} &amp; 0 \ A_{21} &amp; A_{22} \end{bmatrix} $ 其中，$A_{11}$ 和 $A_{22}$ 是方阵。 下面给出一个简单的有向图的例子：</p><p><img src="D:\Postgraduate\MyBlog\hexo-blog\source_posts\Multi-Agent-System-1\image-20250105213207817.png" alt="image-20250105213207817"></p><div align='center'>    <font size='10'>图 2</font></div><p>图2是一个有个节点的有向图。很明显的可以看出，图2是一个弱连通图。其相应的邻接矩阵入度矩阵和拉普拉斯矩阵分别为：</p><p>$ A &#x3D; \begin{bmatrix} 1 &amp; 1 &amp; 1 \ 1 &amp; 1 &amp; 1 \ 1 &amp; 1 &amp; 1 \end{bmatrix} $ $ D &#x3D; \begin{bmatrix} 2 &amp; 0 &amp; 0 \ 0 &amp; 1 &amp; 0 \ 0 &amp; 0 &amp; 1 \end{bmatrix} $ $ L &#x3D; \begin{bmatrix} 2 &amp; -1 &amp; -1 \ -1 &amp; 1 &amp; -1 \ -1 &amp; -1 &amp; 1 \end{bmatrix} $ </p>]]></content>
    
    
    <categories>
      
      <category>多智能体系统一致性控制</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
